(()=>{"use strict";var n={108:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/dayForecastBoard/dayForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const A=d},880:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/dayForecastCard/dayForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const A=d},783:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/modules/components/detailCard/detailCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:[".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const A=d},273:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/hourForecastBoard/hourForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const A=d},48:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/hourForecastCard/hourForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const A=d},11:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/searchBar/searchBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB",sourcesContent:[".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n"],sourceRoot:""}]);const A=d},741:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}","",{version:3,sources:["webpack://./src/modules/components/todayBoard/todayBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2CAA2C;IAC3C,SAAS;IACT,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:[".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}"],sourceRoot:""}]);const A=d},426:(n,e,t)=>{t.d(e,{Z:()=>A});var a=t(537),o=t.n(a),r=t(645),d=t.n(r)()(o());d.push([n.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,6CAA6C;IAC7C,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;;AAEf,UAAU;AACV;IACI,WAAW;IACX,WAAW;AACf;;AAEA,UAAU;AACV;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA,WAAW;AACX;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA,oBAAoB;AACpB;IACI,iBAAiB;AACrB",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n"],sourceRoot:""}]);const A=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(a)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(d[c]=!0)}for(var i=0;i<n.length;i++){var s=[].concat(n[i]);a&&d[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},d=[],A=0;A<n.length;A++){var c=n[A],i=a.base?c[0]+a.base:c[0],s=r[i]||0,l="".concat(i," ").concat(s);r[i]=s+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,a);a.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}d.push(l)}return d}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var d=0;d<r.length;d++){var A=t(r[d]);e[A].references--}for(var c=a(n,o),i=0;i<r.length;i++){var s=t(r[i]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!n;)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),o=t.n(a),r=t(569),d=t.n(r),A=t(565),c=t.n(A),i=t(216),s=t.n(i),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=d().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const b=t.p+"f646ca502700fb71aa79.svg";var C=t(108),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=d().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=s(),e()(C.Z,h),C.Z&&C.Z.locals&&C.Z.locals;const x=t.p+"9571d41eda088e19f37b.svg";var g=t(880),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=d().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=s(),e()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;const I=t.p+"6decf7bd9b10cd59dc3d.svg",y=()=>{const n=document.createElement("div");n.className="day-card";const e=document.createElement("div");e.className="day",e.textContent="Mon",n.appendChild(e);const t=document.createElement("div");t.className="date",t.textContent="16/09",n.appendChild(t);const a=document.createElement("div");a.className="temp",a.textContent="28°",n.appendChild(a);const o=new Image;return o.className="icon",o.src=I,n.appendChild(o),n};var B=t(273),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=d().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=s(),e()(B.Z,v),B.Z&&B.Z.locals&&B.Z.locals;const w=t.p+"59953f3df89bb896d08b.svg";var E=t(48),k={};k.styleTagTransform=p(),k.setAttributes=c(),k.insert=d().bind(null,"head"),k.domAPI=o(),k.insertStyleElement=s(),e()(E.Z,k),E.Z&&E.Z.locals&&E.Z.locals;const S=()=>{const n=document.createElement("div");n.className="hour-card";const e=document.createElement("div");e.className="time",e.textContent="15:00",n.appendChild(e);const t=document.createElement("div");t.className="temp",t.textContent="28°",n.appendChild(t);const a=new Image;return a.src=I,n.appendChild(a),n};var Z=t(11),T={};T.styleTagTransform=p(),T.setAttributes=c(),T.insert=d().bind(null,"head"),T.domAPI=o(),T.insertStyleElement=s(),e()(Z.Z,T),Z.Z&&Z.Z.locals&&Z.Z.locals;const N=t.p+"9307c19cf2ce7ca1b033.svg",Y=t.p+"a1bc70cf1fd9752b9645.svg";var z=t(741),R={};R.styleTagTransform=p(),R.setAttributes=c(),R.insert=d().bind(null,"head"),R.domAPI=o(),R.insertStyleElement=s(),e()(z.Z,R),z.Z&&z.Z.locals&&z.Z.locals;const j=t.p+"779e31fd4101817c3f41.svg",W=t.p+"0b7873d0bb72c7d55a3b.svg",F=t.p+"5f174509409297985c74.svg";var L=t(783),P={};P.styleTagTransform=p(),P.setAttributes=c(),P.insert=d().bind(null,"head"),P.domAPI=o(),P.insertStyleElement=s(),e()(L.Z,P),L.Z&&L.Z.locals&&L.Z.locals;const U=({iconLink:n,title:e,content:t})=>{const a=document.createElement("div");a.className="detail-card";const o=document.createElement("div");o.className="header";const r=new Image;r.className="icon",r.src=n,o.appendChild(r);const d=document.createElement("div");d.textContent=e,o.appendChild(d),a.appendChild(o);const A=document.createElement("div");return A.className="content",A.textContent=t,a.appendChild(A),a},O=()=>({init:()=>{const n=document.createElement("link");n.rel="icon",n.type="image/x-icon",n.href=b,document.head.appendChild(n);const e=document.createElement("div");e.className="left-section";const t=(()=>{const n=document.createElement("div");n.className="search-bar";const e=new Image;e.src=N,e.className="map-icon",n.appendChild(e);const t=document.createElement("input");t.type="text",n.appendChild(t);const a=new Image;return a.src=Y,a.className="search-icon",n.appendChild(a),n})();e.appendChild(t);const a=(()=>{const n=document.createElement("div");n.className="today-board";const e=document.createElement("div");e.className="temp-buttons";const t=document.createElement("button");t.className="c-button button-active",t.textContent="°C",e.appendChild(t);const a=document.createElement("button");a.className="f-button",a.textContent="°F",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="main-display";const r=document.createElement("div");r.className="city",r.textContent="Ho Chi Minh",o.appendChild(r);const d=document.createElement("div");d.className="temp",d.textContent="28°",o.appendChild(d);const A=document.createElement("div");A.className="condition",A.textContent="Rainy Day",o.appendChild(A),n.appendChild(o);const c=document.createElement("div");c.className="detail-display";const i=U({iconLink:j,title:"FEELS LIKE",content:"30°"});c.appendChild(i);const s=U({iconLink:W,title:"PRECIPITATION",content:"20 mm"});c.appendChild(s);const l=U({iconLink:F,title:"VISIBILITY",content:"5 km"});c.appendChild(l);const p=U({iconLink:I,title:"HUMIDITY",content:"82%"});return c.appendChild(p),n.appendChild(c),n})();e.appendChild(a),document.body.appendChild(e);const o=document.createElement("div");o.className="right-section";const r=(()=>{const n=document.createElement("div");n.className="hour-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=w,e.appendChild(t);const a=document.createElement("div");a.textContent="HOURLY FORECAST",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="cards";for(let n=0;n<15;n++){const e=S();0===n&&e.classList.add("hour-card-active"),o.appendChild(e)}return n.appendChild(o),n})();o.appendChild(r);const d=(()=>{const n=document.createElement("div");n.className="day-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=x,e.appendChild(t);const a=document.createElement("div");a.textContent="14-DAY FORECAST",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="cards";for(let n=0;n<14;n++){const e=y();0===n&&e.classList.add("day-card-active"),o.appendChild(e)}return n.appendChild(o),n})();o.appendChild(d),document.body.appendChild(o)}});(()=>{const n=O();return{init:()=>{n.init()},getTodayWeather:async({location:n})=>{try{const e=await fetch(`https://api.weatherapi.com/v1/current.json?key=a447ab4f8114437dab575353231310&q=${n}`),t=await e.json();console.log(t)}catch{console.log("Something went wrong")}},getForecast:async({location:n})=>{try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=a447ab4f8114437dab575353231310&q=${n}&days=7`),t=await e.json();console.log(t)}catch{console.log("Something went wrong")}}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU1PLEVBQW1CLElBMEJ6QixNQUFPLENBQ0gvQixLQXpCUyxLQUNUK0IsRUFBaUIvQixNQUFNLEVBeUJ2QmdDLGdCQXRCb0JDLE9BQVF6RCxlQUM1QixJQUNJLE1BQU0wRCxRQUFpQkMsTUFBTSxtRkFBbUYzRCxLQUMxRzFGLFFBQWFvSixFQUFTRSxPQUM1QkMsUUFBUUMsSUFBSXhKLEVBQ2hCLENBQUUsTUFDRXVKLFFBQVFDLElBQUksdUJBQ2hCLEdBZ0JBQyxZQWJnQk4sT0FBUXpELGVBQ3hCLElBQ0ksTUFBTTBELFFBQWlCQyxNQUFNLG9GQUFvRjNELFlBQzNHMUYsUUFBYW9KLEVBQVNFLE9BQzVCQyxRQUFRQyxJQUFJeEosRUFDaEIsQ0FBRSxNQUNFdUosUUFBUUMsSUFBSSx1QkFDaEIsR0FPSCxFQzlCaUIsR0FDUnRDLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9kYXlGb3JlY2FzdEJvYXJkL2RheUZvcmVjYXN0Qm9hcmQuY3NzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RheUZvcmVjYXN0Q2FyZC9kYXlGb3JlY2FzdENhcmQuY3NzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RldGFpbENhcmQvZGV0YWlsQ2FyZC5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvaG91ckZvcmVjYXN0Qm9hcmQvaG91ckZvcmVjYXN0Qm9hcmQuY3NzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2hvdXJGb3JlY2FzdENhcmQvaG91ckZvcmVjYXN0Q2FyZC5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvc2VhcmNoQmFyL3NlYXJjaEJhci5jc3MiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvdG9kYXlCb2FyZC90b2RheUJvYXJkLmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGF5Rm9yZWNhc3RCb2FyZC9kYXlGb3JlY2FzdEJvYXJkLmNzcz9jNmRkIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RheUZvcmVjYXN0Q2FyZC9kYXlGb3JlY2FzdENhcmQuY3NzP2I1YjEiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGF5Rm9yZWNhc3RDYXJkL2RheUZvcmVjYXN0Q2FyZC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9ob3VyRm9yZWNhc3RCb2FyZC9ob3VyRm9yZWNhc3RCb2FyZC5jc3M/YThhZiIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9ob3VyRm9yZWNhc3RDYXJkL2hvdXJGb3JlY2FzdENhcmQuY3NzPzY4YTciLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvaG91ckZvcmVjYXN0Q2FyZC9ob3VyRm9yZWNhc3RDYXJkLmpzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3NlYXJjaEJhci9zZWFyY2hCYXIuY3NzP2E2NmEiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvdG9kYXlCb2FyZC90b2RheUJvYXJkLmNzcz9kNWI4Iiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RldGFpbENhcmQvZGV0YWlsQ2FyZC5jc3M/MzIyYSIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9kZXRhaWxDYXJkL2RldGFpbENhcmQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbnRyb2xsZXJzL1NjcmVlbkNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvc2VhcmNoQmFyL3NlYXJjaEJhci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvY29tcG9uZW50cy90b2RheUJvYXJkL3RvZGF5Qm9hcmQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvaG91ckZvcmVjYXN0Qm9hcmQvaG91ckZvcmVjYXN0Qm9hcmQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGF5Rm9yZWNhc3RCb2FyZC9kYXlGb3JlY2FzdEJvYXJkLmpzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvbW9kdWxlcy9jb250cm9sbGVycy9BcHBDb250cm9sbGVyLmpzIiwid2VicGFjazovL3dlYXRoZXItZm9yZWNhc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5kYXktYm9hcmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE4MTgxYjtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5kYXktYm9hcmQgLmhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDEwcHg7XG4gICAgY29sb3I6ICM2NDc0OGI7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMC41cHggc29saWQgZ3JleTtcbn1cblxuLmRheS1ib2FyZCAuaGVhZGVyIC5pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG59XG5cbi5kYXktYm9hcmQgLmNhcmRzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogNDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9kYXlGb3JlY2FzdEJvYXJkL2RheUZvcmVjYXN0Qm9hcmQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztJQUNULGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsK0JBQStCO0FBQ25DOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztJQUNULFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmRheS1ib2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE4MTgxYjtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuXFxuLmRheS1ib2FyZCAuaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBjb2xvcjogIzY0NzQ4YjtcXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci1ib3R0b206IDAuNXB4IHNvbGlkIGdyZXk7XFxufVxcblxcbi5kYXktYm9hcmQgLmhlYWRlciAuaWNvbiB7XFxuICAgIHdpZHRoOiAyMHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxufVxcblxcbi5kYXktYm9hcmQgLmNhcmRzIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiA0MHB4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgb3ZlcmZsb3cteDogYXV0bztcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZGF5LWNhcmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDVweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5kYXktY2FyZCAuZGF5IHtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG5cbi5kYXktY2FyZCAuZGF0ZSB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGNvbG9yOiAjNjQ3NDhiO1xufVxuXG4uZGF5LWNhcmQgLnRlbXAge1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbn1cblxuLmRheS1jYXJkLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjEpO1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvZGF5Rm9yZWNhc3RDYXJkL2RheUZvcmVjYXN0Q2FyZC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFFBQVE7SUFDUix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Q1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZGF5LWNhcmQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuXFxuLmRheS1jYXJkIC5kYXkge1xcbiAgICBmb250LXNpemU6IDEycHg7XFxufVxcblxcbi5kYXktY2FyZCAuZGF0ZSB7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgY29sb3I6ICM2NDc0OGI7XFxufVxcblxcbi5kYXktY2FyZCAudGVtcCB7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG59XFxuXFxuLmRheS1jYXJkLWFjdGl2ZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ1LCAyNDUsIDI0NSwgMC4xKTtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZGV0YWlsLWNhcmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI3MjcyYTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGhlaWdodDogMTMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLmRldGFpbC1jYXJkIC5oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDVweDtcbiAgICBjb2xvcjogIzY0NzQ4Yjtcbn1cblxuLmRldGFpbC1jYXJkIC5pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG59XG5cbi5kZXRhaWwtY2FyZCAuY29udGVudCB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2RldGFpbENhcmQvZGV0YWlsQ2FyZC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5kZXRhaWwtY2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI3MjcyYTtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgaGVpZ2h0OiAxMzBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuXFxuLmRldGFpbC1jYXJkIC5oZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDVweDtcXG4gICAgY29sb3I6ICM2NDc0OGI7XFxufVxcblxcbi5kZXRhaWwtY2FyZCAuaWNvbiB7XFxuICAgIHdpZHRoOiAyMHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxufVxcblxcbi5kZXRhaWwtY2FyZCAuY29udGVudCB7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuaG91ci1ib2FyZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxODFiO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbn1cblxuLmhvdXItYm9hcmQgLmhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDEwcHg7XG4gICAgY29sb3I6ICM2NDc0OGI7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMC41cHggc29saWQgZ3JleTtcbn1cblxuLmhvdXItYm9hcmQgLmhlYWRlciAuaWNvbiB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xufVxuXG4uaG91ci1ib2FyZCAuY2FyZHMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiA0MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93LXg6IGF1dG87XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL2hvdXJGb3JlY2FzdEJvYXJkL2hvdXJGb3JlY2FzdEJvYXJkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztJQUNULHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCxjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLCtCQUErQjtBQUNuQzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCxXQUFXO0lBQ1gsZ0JBQWdCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ob3VyLWJvYXJkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxODFiO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG5cXG4uaG91ci1ib2FyZCAuaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICBjb2xvcjogIzY0NzQ4YjtcXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci1ib3R0b206IDAuNXB4IHNvbGlkIGdyZXk7XFxufVxcblxcbi5ob3VyLWJvYXJkIC5oZWFkZXIgLmljb24ge1xcbiAgICB3aWR0aDogMjBweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbn1cXG5cXG4uaG91ci1ib2FyZCAuY2FyZHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDQwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5ob3VyLWNhcmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDVweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5ob3VyLWNhcmQgLnRpbWUge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuLmhvdXItY2FyZCAudGVtcCB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xufVxuXG4uaG91ci1jYXJkLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjEpO1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9tb2R1bGVzL2NvbXBvbmVudHMvaG91ckZvcmVjYXN0Q2FyZC9ob3VyRm9yZWNhc3RDYXJkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsUUFBUTtJQUNSLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDBDQUEwQztBQUM5Q1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaG91ci1jYXJkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XFxufVxcblxcbi5ob3VyLWNhcmQgLnRpbWUge1xcbiAgICBmb250LXNpemU6IDEycHg7XFxufVxcblxcbi5ob3VyLWNhcmQgLnRlbXAge1xcbiAgICBmb250LXNpemU6IDMwcHg7XFxufVxcblxcbi5ob3VyLWNhcmQtYWN0aXZlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDUsIDI0NSwgMjQ1LCAwLjEpO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5zZWFyY2gtYmFyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogNXB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzE3MTdhO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG59XG5cbi5zZWFyY2gtYmFyIC5tYXAtaWNvbiB7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2VhcmNoLWJhciBpbnB1dCB7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgb3V0bGluZTogbm9uZTtcbn1cblxuLnNlYXJjaC1iYXIgLnNlYXJjaC1pY29uIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21vZHVsZXMvY29tcG9uZW50cy9zZWFyY2hCYXIvc2VhcmNoQmFyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixRQUFRO0lBQ1IsWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2VhcmNoLWJhciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNXB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MTcxN2E7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xcbn1cXG5cXG4uc2VhcmNoLWJhciAubWFwLWljb24ge1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxufVxcblxcbi5zZWFyY2gtYmFyIGlucHV0IHtcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi5zZWFyY2gtYmFyIC5zZWFyY2gtaWNvbiB7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAudG9kYXktYm9hcmQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBnYXA6IDgwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE4MTgxYjtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgZmxleC1ncm93OiAxO1xufVxuXG4udG9kYXktYm9hcmQgLnRlbXAtYnV0dG9ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuXG4udG9kYXktYm9hcmQgLmMtYnV0dG9uLCAudG9kYXktYm9hcmQgLmYtYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi50b2RheS1ib2FyZCAuYy1idXR0b246aG92ZXIsIC50b2RheS1ib2FyZCAuZi1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MTcxN2E7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuXG4udG9kYXktYm9hcmQgLmMtYnV0dG9uLmJ1dHRvbi1hY3RpdmUsIC50b2RheS1ib2FyZCAuZi1idXR0b24uYnV0dG9uLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzcxNzE3YTtcbn1cblxuLnRvZGF5LWJvYXJkIC5tYWluLWRpc3BsYXkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBnYXA6IDEwcHg7XG59XG5cbi50b2RheS1ib2FyZCAubWFpbi1kaXNwbGF5IC5jaXR5IHtcbiAgICBmb250LXNpemU6IDI1cHg7XG59XG5cbi50b2RheS1ib2FyZCAubWFpbi1kaXNwbGF5IC50ZW1wIHtcbiAgICBmb250LXNpemU6IDYwcHg7XG59XG5cbi50b2RheS1ib2FyZCAubWFpbi1kaXNwbGF5IC5jb25kaXRpb24ge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBjb2xvcjogI2QxZDVkYjtcbn1cblxuLnRvZGF5LWJvYXJkIC5kZXRhaWwtZGlzcGxheSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtYXgtY29udGVudCBtYXgtY29udGVudDtcbiAgICBnYXA6IDIwcHg7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGp1c3RpZnktc2VsZjogZmxleC1lbmQ7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvbW9kdWxlcy9jb21wb25lbnRzL3RvZGF5Qm9hcmQvdG9kYXlCb2FyZC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osU0FBUztBQUNiOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsMkNBQTJDO0lBQzNDLFNBQVM7SUFDVCxZQUFZO0lBQ1osc0JBQXNCO0FBQzFCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50b2RheS1ib2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogODBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE4MTgxYjtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgZmxleC1ncm93OiAxO1xcbn1cXG5cXG4udG9kYXktYm9hcmQgLnRlbXAtYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxufVxcblxcbi50b2RheS1ib2FyZCAuYy1idXR0b24sIC50b2RheS1ib2FyZCAuZi1idXR0b24ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIHdpZHRoOiAzMHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnRvZGF5LWJvYXJkIC5jLWJ1dHRvbjpob3ZlciwgLnRvZGF5LWJvYXJkIC5mLWJ1dHRvbjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3MTcxN2E7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuLnRvZGF5LWJvYXJkIC5jLWJ1dHRvbi5idXR0b24tYWN0aXZlLCAudG9kYXktYm9hcmQgLmYtYnV0dG9uLmJ1dHRvbi1hY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzE3MTdhO1xcbn1cXG5cXG4udG9kYXktYm9hcmQgLm1haW4tZGlzcGxheSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4udG9kYXktYm9hcmQgLm1haW4tZGlzcGxheSAuY2l0eSB7XFxuICAgIGZvbnQtc2l6ZTogMjVweDtcXG59XFxuXFxuLnRvZGF5LWJvYXJkIC5tYWluLWRpc3BsYXkgLnRlbXAge1xcbiAgICBmb250LXNpemU6IDYwcHg7XFxufVxcblxcbi50b2RheS1ib2FyZCAubWFpbi1kaXNwbGF5IC5jb25kaXRpb24ge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGNvbG9yOiAjZDFkNWRiO1xcbn1cXG5cXG4udG9kYXktYm9hcmQgLmRldGFpbC1kaXNwbGF5IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1heC1jb250ZW50IG1heC1jb250ZW50O1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqIHtcbiAgICAvKiBGaXggaXNzdWUgd2l0aCBleHRyYSBzcGFjZSBvbiB0aGUgc2lkZSB3aGVuIGFkZGluZyBwYWRkaW5nICovXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiBTYWZhcmkvQ2hyb21lLCBvdGhlciBXZWJLaXQgKi9cbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7ICAgIC8qIEZpcmVmb3gsIG90aGVyIEdlY2tvICovXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgICAgICAgICAvKiBPcGVyYS9JRSA4KyAqL1xufVxuXG5ib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIG1pbm1heCg1MDBweCwgMmZyKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNzJhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBzZXJpZjtcbn1cblxuLmxlZnQtc2VjdGlvbiB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAyMHB4O1xufVxuXG4ucmlnaHQtc2VjdGlvbiB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAyMHB4O1xufVxuXG4vKiBTQ1JPTEwgQkFSICovXG5cbi8qIHdpZHRoICovXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDVweDtcbn1cbiAgXG4vKiBUcmFjayAqL1xuOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi8qIEhhbmRsZSAqL1xuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgYmFja2dyb3VuZDogI2NiZDVlMTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi8qIEhhbmRsZSBvbiBob3ZlciAqL1xuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLCtEQUErRDtJQUMvRCw4QkFBOEIsRUFBRSxnQ0FBZ0M7SUFDaEUsMkJBQTJCLEtBQUsseUJBQXlCO0lBQ3pELHNCQUFzQixVQUFVLGdCQUFnQjtBQUNwRDs7QUFFQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1YsYUFBYTtJQUNiLDZDQUE2QztJQUM3Qyx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0FBQ2I7O0FBRUEsZUFBZTs7QUFFZixVQUFVO0FBQ1Y7SUFDSSxXQUFXO0lBQ1gsV0FBVztBQUNmOztBQUVBLFVBQVU7QUFDVjtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUEsV0FBVztBQUNYO0lBQ0ksbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQSxvQkFBb0I7QUFDcEI7SUFDSSxpQkFBaUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIC8qIEZpeCBpc3N1ZSB3aXRoIGV4dHJhIHNwYWNlIG9uIHRoZSBzaWRlIHdoZW4gYWRkaW5nIHBhZGRpbmcgKi9cXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiBTYWZhcmkvQ2hyb21lLCBvdGhlciBXZWJLaXQgKi9cXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyAgICAvKiBGaXJlZm94LCBvdGhlciBHZWNrbyAqL1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAgICAgICAgIC8qIE9wZXJhL0lFIDgrICovXFxufVxcblxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIG1pbm1heCg1MDBweCwgMmZyKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI3MjcyYTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBmb250LWZhbWlseTogR2VvcmdpYSwgc2VyaWY7XFxufVxcblxcbi5sZWZ0LXNlY3Rpb24ge1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxufVxcblxcbi5yaWdodC1zZWN0aW9uIHtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4vKiBTQ1JPTEwgQkFSICovXFxuXFxuLyogd2lkdGggKi9cXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gICAgd2lkdGg6IDEwcHg7XFxuICAgIGhlaWdodDogNXB4O1xcbn1cXG4gIFxcbi8qIFRyYWNrICovXFxuOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XFxuICAgIGJhY2tncm91bmQ6IGdyZXk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLyogSGFuZGxlICovXFxuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XFxuICAgIGJhY2tncm91bmQ6ICNjYmQ1ZTE7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLyogSGFuZGxlIG9uIGhvdmVyICovXFxuOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZGF5Rm9yZWNhc3RCb2FyZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2RheUZvcmVjYXN0Qm9hcmQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2RheUZvcmVjYXN0Q2FyZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2RheUZvcmVjYXN0Q2FyZC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL2RheUZvcmVjYXN0Q2FyZC5jc3NcIjtcbmltcG9ydCBIdW1pZGl0eUljb25MaW5rIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvaHVtaWRpdHkuc3ZnXCI7XG5cbmNvbnN0IGNyZWF0ZURheUZvcmVjYXN0Q2FyZCAgPSAoKSA9PiB7XG4gICAgLy8gQWRkIGNhcmRcbiAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjYXJkLmNsYXNzTmFtZSA9IFwiZGF5LWNhcmRcIjtcblxuICAgIC8vIEFkZCBkYXlcbiAgICBjb25zdCBkYXlEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRheURpdi5jbGFzc05hbWUgPSBcImRheVwiO1xuICAgIGRheURpdi50ZXh0Q29udGVudCA9IFwiTW9uXCI7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChkYXlEaXYpO1xuXG4gICAgLy8gQWRkIGRhdGVcbiAgICBjb25zdCBkYXRlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkYXRlRGl2LmNsYXNzTmFtZSA9IFwiZGF0ZVwiO1xuICAgIGRhdGVEaXYudGV4dENvbnRlbnQgPSBcIjE2LzA5XCI7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChkYXRlRGl2KTtcblxuICAgIC8vIEFkZCB0ZW1wZXJhdHVyZVxuICAgIGNvbnN0IHRlbXBEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRlbXBEaXYuY2xhc3NOYW1lID0gXCJ0ZW1wXCI7XG4gICAgdGVtcERpdi50ZXh0Q29udGVudCA9IFwiMjjCsFwiXG4gICAgY2FyZC5hcHBlbmRDaGlsZCh0ZW1wRGl2KTtcblxuICAgIC8vIEFkZCBpY29uXG4gICAgY29uc3QgaWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGljb24uY2xhc3NOYW1lID0gXCJpY29uXCJcbiAgICBpY29uLnNyYyA9IEh1bWlkaXR5SWNvbkxpbms7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChpY29uKTtcblxuICAgIHJldHVybiBjYXJkO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRGF5Rm9yZWNhc3RDYXJkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ob3VyRm9yZWNhc3RCb2FyZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2hvdXJGb3JlY2FzdEJvYXJkLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ob3VyRm9yZWNhc3RDYXJkLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaG91ckZvcmVjYXN0Q2FyZC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL2hvdXJGb3JlY2FzdENhcmQuY3NzXCI7XG5pbXBvcnQgSHVtaWRpdHlJY29uTGluayBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL2h1bWlkaXR5LnN2Z1wiO1xuXG5jb25zdCBjcmVhdGVIb3VyRm9yZWNhc3RDYXJkID0gKCkgPT4ge1xuICAgIC8vIEFkZCBjYXJkXG4gICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZC5jbGFzc05hbWUgPSBcImhvdXItY2FyZFwiO1xuXG4gICAgLy8gQWRkIHRpbWVcbiAgICBjb25zdCB0aW1lRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aW1lRGl2LmNsYXNzTmFtZSA9IFwidGltZVwiO1xuICAgIHRpbWVEaXYudGV4dENvbnRlbnQgPSBcIjE1OjAwXCI7XG4gICAgY2FyZC5hcHBlbmRDaGlsZCh0aW1lRGl2KTtcblxuICAgIC8vIEFkZCB0ZW1wZXJhdHVyZVxuICAgIGNvbnN0IHRlbXBEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRlbXBEaXYuY2xhc3NOYW1lID0gXCJ0ZW1wXCI7XG4gICAgdGVtcERpdi50ZXh0Q29udGVudCA9IFwiMjjCsFwiXG4gICAgY2FyZC5hcHBlbmRDaGlsZCh0ZW1wRGl2KTtcblxuICAgIC8vIEFkZCBpY29uXG4gICAgY29uc3QgaWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGljb24uc3JjID0gSHVtaWRpdHlJY29uTGluaztcbiAgICBjYXJkLmFwcGVuZENoaWxkKGljb24pO1xuXG4gICAgcmV0dXJuIGNhcmQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVIb3VyRm9yZWNhc3RDYXJkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zZWFyY2hCYXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zZWFyY2hCYXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvZGF5Qm9hcmQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90b2RheUJvYXJkLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kZXRhaWxDYXJkLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZGV0YWlsQ2FyZC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL2RldGFpbENhcmQuY3NzXCI7XG5cbmNvbnN0IGNyZWF0ZURldGFpbENhcmQgPSAoe2ljb25MaW5rLCB0aXRsZSwgY29udGVudH0pID0+IHtcbiAgICAvLyBBZGQgZGV0YWlsIGNhcmRcbiAgICBjb25zdCBkZXRhaWxDYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkZXRhaWxDYXJkLmNsYXNzTmFtZSA9IFwiZGV0YWlsLWNhcmRcIjtcblxuICAgIC8vIEFkZCBoZWFkZXJcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlci5jbGFzc05hbWUgPSBcImhlYWRlclwiO1xuXG4gICAgY29uc3QgaWNvbiA9IG5ldyBJbWFnZSgpO1xuICAgIGljb24uY2xhc3NOYW1lID0gXCJpY29uXCI7XG4gICAgaWNvbi5zcmMgPSBpY29uTGluaztcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaWNvbik7XG5cbiAgICBjb25zdCB0aXRsZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGl0bGVEaXYudGV4dENvbnRlbnQgPSB0aXRsZTtcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQodGl0bGVEaXYpO1xuXG4gICAgZGV0YWlsQ2FyZC5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIGNvbnRlbnRcbiAgICBjb25zdCBjb250ZW50RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjb250ZW50RGl2LmNsYXNzTmFtZSA9IFwiY29udGVudFwiO1xuICAgIGNvbnRlbnREaXYudGV4dENvbnRlbnQgPSBjb250ZW50O1xuICAgIGRldGFpbENhcmQuYXBwZW5kQ2hpbGQoY29udGVudERpdik7XG5cbiAgICByZXR1cm4gZGV0YWlsQ2FyZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZURldGFpbENhcmQ7IiwiaW1wb3J0IExvZ29JY29uTGluayBmcm9tIFwiLi4vLi4vYXNzZXRzL2xvZ28uc3ZnXCI7XG5pbXBvcnQgY3JlYXRlRGF5Rm9yZWNhc3RCb2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9kYXlGb3JlY2FzdEJvYXJkL2RheUZvcmVjYXN0Qm9hcmRcIjtcbmltcG9ydCBjcmVhdGVIb3VyRm9yZWNhc3RCb2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9ob3VyRm9yZWNhc3RCb2FyZC9ob3VyRm9yZWNhc3RCb2FyZFwiO1xuaW1wb3J0IGNyZWF0ZVNlYXJjaEJhciBmcm9tIFwiLi4vY29tcG9uZW50cy9zZWFyY2hCYXIvc2VhcmNoQmFyXCI7XG5pbXBvcnQgY3JlYXRlVG9kYXlCb2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy90b2RheUJvYXJkL3RvZGF5Qm9hcmRcIjtcblxuY29uc3QgU2NyZWVuQ29udHJvbGxlciA9ICgpID0+IHtcbiAgICBjb25zdCBpbml0ID0gKCkgPT4ge1xuICAgICAgICAvLyBBZGQgZmF2aWNvblxuICAgICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG4gICAgICAgIGxpbmsucmVsID0gXCJpY29uXCI7XG4gICAgICAgIGxpbmsudHlwZSA9IFwiaW1hZ2UveC1pY29uXCI7XG4gICAgICAgIGxpbmsuaHJlZiA9IExvZ29JY29uTGluaztcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rKTtcblxuICAgICAgICAvLyBBZGQgbGVmdCBzZWN0aW9uXG4gICAgICAgIGNvbnN0IGxlZnRTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgbGVmdFNlY3Rpb24uY2xhc3NOYW1lID0gXCJsZWZ0LXNlY3Rpb25cIjtcblxuICAgICAgICAvLyBBZGQgc2VhcmNoIGJhclxuICAgICAgICBjb25zdCBzZWFyY2hCYXIgPSBjcmVhdGVTZWFyY2hCYXIoKTtcbiAgICAgICAgbGVmdFNlY3Rpb24uYXBwZW5kQ2hpbGQoc2VhcmNoQmFyKTtcblxuICAgICAgICAvLyBBZGQgdG9kYXkgYm9hcmRcbiAgICAgICAgY29uc3QgdG9kYXlCb2FyZCA9IGNyZWF0ZVRvZGF5Qm9hcmQoKTtcbiAgICAgICAgbGVmdFNlY3Rpb24uYXBwZW5kQ2hpbGQodG9kYXlCb2FyZCk7XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsZWZ0U2VjdGlvbik7XG5cbiAgICAgICAgLy8gQWRkIHJpZ2h0IHNlY3Rpb25cbiAgICAgICAgY29uc3QgcmlnaHRTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgcmlnaHRTZWN0aW9uLmNsYXNzTmFtZSA9IFwicmlnaHQtc2VjdGlvblwiO1xuXG4gICAgICAgIC8vIEFkZCBob3VybHkgZm9yZWNhc3QgYm9hcmRcbiAgICAgICAgY29uc3QgaG91ckZvcmVjYXN0Qm9hcmQgPSBjcmVhdGVIb3VyRm9yZWNhc3RCb2FyZCgpO1xuICAgICAgICByaWdodFNlY3Rpb24uYXBwZW5kQ2hpbGQoaG91ckZvcmVjYXN0Qm9hcmQpO1xuXG4gICAgICAgIC8vIEFkZCAxNC1kYXkgZm9yZWNhc3QgYm9hcmRcbiAgICAgICAgY29uc3QgZGF5Rm9yZWNhc3RCb2FyZCA9IGNyZWF0ZURheUZvcmVjYXN0Qm9hcmQoKTtcbiAgICAgICAgcmlnaHRTZWN0aW9uLmFwcGVuZENoaWxkKGRheUZvcmVjYXN0Qm9hcmQpO1xuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocmlnaHRTZWN0aW9uKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2NyZWVuQ29udHJvbGxlcjtcbiIsImltcG9ydCBcIi4vc2VhcmNoQmFyLmNzc1wiO1xuaW1wb3J0IE1hcEljb25MaW5rIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvbWFwLW1hcmtlci5zdmdcIjtcbmltcG9ydCBTZWFyY2hJY29uTGluayBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL3NlYXJjaC5zdmdcIjtcblxuY29uc3QgY3JlYXRlU2VhcmNoQmFyID0gKCkgPT4ge1xuICAgIC8vIEFkZCBzZWFyY2ggYmFyXG4gICAgY29uc3Qgc2VhcmNoQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBzZWFyY2hCYXIuY2xhc3NOYW1lID0gXCJzZWFyY2gtYmFyXCI7XG5cbiAgICAvLyBBZGQgbWFwIGljb25cbiAgICBjb25zdCBtYXBJY29uID0gbmV3IEltYWdlKCk7XG4gICAgbWFwSWNvbi5zcmMgPSBNYXBJY29uTGluaztcbiAgICBtYXBJY29uLmNsYXNzTmFtZSA9IFwibWFwLWljb25cIjtcbiAgICBzZWFyY2hCYXIuYXBwZW5kQ2hpbGQobWFwSWNvbik7XG5cbiAgICAvLyBBZGQgaW5wdXQgZmllbGRcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dC50eXBlID0gXCJ0ZXh0XCI7XG4gICAgc2VhcmNoQmFyLmFwcGVuZENoaWxkKGlucHV0KTtcblxuICAgIC8vIEFkZCBzZWFyY2ggaWNvblxuICAgIGNvbnN0IHNlYXJjaEljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICBzZWFyY2hJY29uLnNyYyA9IFNlYXJjaEljb25MaW5rO1xuICAgIHNlYXJjaEljb24uY2xhc3NOYW1lID0gXCJzZWFyY2gtaWNvblwiO1xuICAgIHNlYXJjaEJhci5hcHBlbmRDaGlsZChzZWFyY2hJY29uKTtcblxuICAgIHJldHVybiBzZWFyY2hCYXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTZWFyY2hCYXI7IiwiaW1wb3J0IFwiLi90b2RheUJvYXJkLmNzc1wiO1xuaW1wb3J0IFRoZXJtb21ldGVySWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy90aGVybW9tZXRlci5zdmdcIjtcbmltcG9ydCBQcmVjaXBpdGF0aW9uSWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy9wcmVjaXBpdGF0aW9uLnN2Z1wiO1xuaW1wb3J0IFZpc2liaWxpdHlJY29uTGluayBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL3Zpc2liaWxpdHkuc3ZnXCI7XG5pbXBvcnQgSHVtaWRpdHlJY29uTGluayBmcm9tIFwiLi4vLi4vLi4vYXNzZXRzL2h1bWlkaXR5LnN2Z1wiO1xuaW1wb3J0IGNyZWF0ZURldGFpbENhcmQgZnJvbSBcIi4uL2RldGFpbENhcmQvZGV0YWlsQ2FyZFwiO1xuXG5jb25zdCBjcmVhdGVUb2RheUJvYXJkID0gKCkgPT4ge1xuICAgIC8vIENyZWF0ZSBib2FyZFxuICAgIGNvbnN0IHRvZGF5Qm9hcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRvZGF5Qm9hcmQuY2xhc3NOYW1lID0gXCJ0b2RheS1ib2FyZFwiO1xuXG4gICAgLy8gQWRkIHRoZSB0ZW1wZXJhdHVyZSBidXR0b25zXG4gICAgY29uc3QgdGVtcEJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRlbXBCdXR0b25zLmNsYXNzTmFtZSA9IFwidGVtcC1idXR0b25zXCI7XG5cbiAgICBjb25zdCBjQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjQnV0dG9uLmNsYXNzTmFtZSA9IFwiYy1idXR0b24gYnV0dG9uLWFjdGl2ZVwiO1xuICAgIGNCdXR0b24udGV4dENvbnRlbnQgPSBcIsKwQ1wiO1xuICAgIHRlbXBCdXR0b25zLmFwcGVuZENoaWxkKGNCdXR0b24pO1xuXG4gICAgY29uc3QgZkJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgZkJ1dHRvbi5jbGFzc05hbWUgPSBcImYtYnV0dG9uXCI7XG4gICAgZkJ1dHRvbi50ZXh0Q29udGVudCA9IFwiwrBGXCI7XG4gICAgdGVtcEJ1dHRvbnMuYXBwZW5kQ2hpbGQoZkJ1dHRvbik7XG5cbiAgICB0b2RheUJvYXJkLmFwcGVuZENoaWxkKHRlbXBCdXR0b25zKTtcblxuICAgIC8vIEFkZCB0aGUgbWFpbiBkaXNwbGF5XG4gICAgY29uc3QgbWFpbkRpc3BsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG1haW5EaXNwbGF5LmNsYXNzTmFtZSA9IFwibWFpbi1kaXNwbGF5XCI7XG5cbiAgICBjb25zdCBjaXR5RGlzcGxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2l0eURpc3BsYXkuY2xhc3NOYW1lID0gXCJjaXR5XCI7XG4gICAgY2l0eURpc3BsYXkudGV4dENvbnRlbnQgPSBcIkhvIENoaSBNaW5oXCI7XG4gICAgbWFpbkRpc3BsYXkuYXBwZW5kQ2hpbGQoY2l0eURpc3BsYXkpO1xuXG4gICAgY29uc3QgdGVtcERpc3BsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRlbXBEaXNwbGF5LmNsYXNzTmFtZSA9IFwidGVtcFwiO1xuICAgIHRlbXBEaXNwbGF5LnRleHRDb250ZW50ID0gXCIyOMKwXCI7XG4gICAgbWFpbkRpc3BsYXkuYXBwZW5kQ2hpbGQodGVtcERpc3BsYXkpO1xuXG4gICAgY29uc3QgY29uZGl0aW9uRGlzcGxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uZGl0aW9uRGlzcGxheS5jbGFzc05hbWUgPSBcImNvbmRpdGlvblwiO1xuICAgIGNvbmRpdGlvbkRpc3BsYXkudGV4dENvbnRlbnQgPSBcIlJhaW55IERheVwiO1xuICAgIG1haW5EaXNwbGF5LmFwcGVuZENoaWxkKGNvbmRpdGlvbkRpc3BsYXkpO1xuXG4gICAgdG9kYXlCb2FyZC5hcHBlbmRDaGlsZChtYWluRGlzcGxheSk7XG5cbiAgICAvLyBBZGQgZGV0YWlsIGRpc3BsYXlcbiAgICBjb25zdCBkZXRhaWxEaXNwbGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkZXRhaWxEaXNwbGF5LmNsYXNzTmFtZSA9IFwiZGV0YWlsLWRpc3BsYXlcIjtcblxuICAgIGNvbnN0IGZlZWxzTGlrZUNhcmQgPSBjcmVhdGVEZXRhaWxDYXJkKHtpY29uTGluazogVGhlcm1vbWV0ZXJJY29uTGluaywgdGl0bGU6IFwiRkVFTFMgTElLRVwiLCBjb250ZW50OiBcIjMwwrBcIn0pO1xuICAgIGRldGFpbERpc3BsYXkuYXBwZW5kQ2hpbGQoZmVlbHNMaWtlQ2FyZCk7XG5cbiAgICBjb25zdCBwcmVjaXBpdGF0aW9uQ2FyZCA9IGNyZWF0ZURldGFpbENhcmQoe2ljb25MaW5rOiBQcmVjaXBpdGF0aW9uSWNvbkxpbmssIHRpdGxlOiBcIlBSRUNJUElUQVRJT05cIiwgY29udGVudDogXCIyMCBtbVwifSk7XG4gICAgZGV0YWlsRGlzcGxheS5hcHBlbmRDaGlsZChwcmVjaXBpdGF0aW9uQ2FyZCk7XG5cbiAgICBjb25zdCB2aXNpYmlsaXR5Q2FyZCA9IGNyZWF0ZURldGFpbENhcmQoe2ljb25MaW5rOiBWaXNpYmlsaXR5SWNvbkxpbmssIHRpdGxlOiBcIlZJU0lCSUxJVFlcIiwgY29udGVudDogXCI1IGttXCJ9KTtcbiAgICBkZXRhaWxEaXNwbGF5LmFwcGVuZENoaWxkKHZpc2liaWxpdHlDYXJkKTtcblxuICAgIGNvbnN0IGh1bWlkaXR5Q2FyZCA9IGNyZWF0ZURldGFpbENhcmQoe2ljb25MaW5rOiBIdW1pZGl0eUljb25MaW5rLCB0aXRsZTogXCJIVU1JRElUWVwiLCBjb250ZW50OiBcIjgyJVwifSk7XG4gICAgZGV0YWlsRGlzcGxheS5hcHBlbmRDaGlsZChodW1pZGl0eUNhcmQpO1xuXG4gICAgdG9kYXlCb2FyZC5hcHBlbmRDaGlsZChkZXRhaWxEaXNwbGF5KTtcblxuICAgIHJldHVybiB0b2RheUJvYXJkO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVG9kYXlCb2FyZDsiLCJpbXBvcnQgXCIuL2hvdXJGb3JlY2FzdEJvYXJkLmNzc1wiO1xuaW1wb3J0IENsb2NrSWNvbkxpbmsgZnJvbSBcIi4uLy4uLy4uL2Fzc2V0cy9jbG9jay5zdmdcIjtcbmltcG9ydCBjcmVhdGVIb3VyRm9yZWNhc3RDYXJkIGZyb20gXCIuLi9ob3VyRm9yZWNhc3RDYXJkL2hvdXJGb3JlY2FzdENhcmRcIjtcblxuY29uc3QgY3JlYXRlSG91ckZvcmVjYXN0Qm9hcmQgPSAoKSA9PiB7XG4gICAgLy8gQ3JlYXRlIGJvYXJkXG4gICAgY29uc3QgYm9hcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJvYXJkLmNsYXNzTmFtZSA9IFwiaG91ci1ib2FyZFwiO1xuXG4gICAgLy8gQWRkIGhlYWRlclxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgaGVhZGVyLmNsYXNzTmFtZSA9IFwiaGVhZGVyXCI7XG5cbiAgICBjb25zdCBpY29uID0gbmV3IEltYWdlKCk7XG4gICAgaWNvbi5jbGFzc05hbWUgPSBcImljb25cIjtcbiAgICBpY29uLnNyYyA9IENsb2NrSWNvbkxpbms7XG4gICAgaGVhZGVyLmFwcGVuZENoaWxkKGljb24pO1xuXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRpdGxlLnRleHRDb250ZW50ID0gXCJIT1VSTFkgRk9SRUNBU1RcIjtcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQodGl0bGUpO1xuXG4gICAgYm9hcmQuYXBwZW5kQ2hpbGQoaGVhZGVyKTtcblxuICAgIC8vIEFkZCBzZWN0aW9uIHRvIGRpc3BsYXkgZm9yZWNhc3QgY2FyZHNcbiAgICBjb25zdCBjYXJkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZHMuY2xhc3NOYW1lID0gXCJjYXJkc1wiO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNTsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVIb3VyRm9yZWNhc3RDYXJkKCk7XG4gICAgICAgIGlmIChpID09PSAwKSB7XG4gICAgICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoXCJob3VyLWNhcmQtYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNhcmRzLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH1cblxuICAgIGJvYXJkLmFwcGVuZENoaWxkKGNhcmRzKTtcblxuICAgIHJldHVybiBib2FyZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhvdXJGb3JlY2FzdEJvYXJkOyIsImltcG9ydCBcIi4vZGF5Rm9yZWNhc3RCb2FyZC5jc3NcIjtcbmltcG9ydCBDYWxlbmRhckljb25MaW5rIGZyb20gXCIuLi8uLi8uLi9hc3NldHMvY2FsZW5kYXIuc3ZnXCI7XG5pbXBvcnQgY3JlYXRlRGF5Rm9yZWNhc3RDYXJkIGZyb20gXCIuLi9kYXlGb3JlY2FzdENhcmQvZGF5Rm9yZWNhc3RDYXJkXCI7XG5cbmNvbnN0IGNyZWF0ZURheUZvcmVjYXN0Qm9hcmQgPSAoKSA9PiB7XG4gICAgLy8gQ3JlYXRlIGJvYXJkXG4gICAgY29uc3QgYm9hcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJvYXJkLmNsYXNzTmFtZSA9IFwiZGF5LWJvYXJkXCI7XG5cbiAgICAvLyBBZGQgaGVhZGVyXG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBoZWFkZXIuY2xhc3NOYW1lID0gXCJoZWFkZXJcIjtcblxuICAgIGNvbnN0IGljb24gPSBuZXcgSW1hZ2UoKTtcbiAgICBpY29uLmNsYXNzTmFtZSA9IFwiaWNvblwiO1xuICAgIGljb24uc3JjID0gQ2FsZW5kYXJJY29uTGluaztcbiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaWNvbik7XG5cbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBcIjE0LURBWSBGT1JFQ0FTVFwiO1xuICAgIGhlYWRlci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICBib2FyZC5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gICAgLy8gQWRkIHNlY3Rpb24gdG8gZGlzcGxheSBmb3JlY2FzdCBjYXJkc1xuICAgIGNvbnN0IGNhcmRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjYXJkcy5jbGFzc05hbWUgPSBcImNhcmRzXCI7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE0OyBpKyspIHtcbiAgICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZURheUZvcmVjYXN0Q2FyZCgpO1xuICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgICAgY2FyZC5jbGFzc0xpc3QuYWRkKFwiZGF5LWNhcmQtYWN0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNhcmRzLmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH1cblxuICAgIGJvYXJkLmFwcGVuZENoaWxkKGNhcmRzKTtcblxuICAgIHJldHVybiBib2FyZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZURheUZvcmVjYXN0Qm9hcmQ7IiwiaW1wb3J0IFNjcmVlbkNvbnRyb2xsZXIgZnJvbSBcIi4vU2NyZWVuQ29udHJvbGxlclwiO1xuXG5jb25zdCBBcHBDb250cm9sbGVyID0gKCkgPT4ge1xuICAgIGNvbnN0IHNjcmVlbkNvbnRyb2xsZXIgPSBTY3JlZW5Db250cm9sbGVyKCk7XG5cbiAgICBjb25zdCBpbml0ID0gKCkgPT4ge1xuICAgICAgICBzY3JlZW5Db250cm9sbGVyLmluaXQoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgZ2V0VG9kYXlXZWF0aGVyID0gYXN5bmMgKHtsb2NhdGlvbn0pID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2N1cnJlbnQuanNvbj9rZXk9YTQ0N2FiNGY4MTE0NDM3ZGFiNTc1MzUzMjMxMzEwJnE9JHtsb2NhdGlvbn1gKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nXCIpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGdldEZvcmVjYXN0ID0gYXN5bmMgKHtsb2NhdGlvbn0pID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PWE0NDdhYjRmODExNDQzN2RhYjU3NTM1MzIzMTMxMCZxPSR7bG9jYXRpb259JmRheXM9N2ApO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3JvbmdcIik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdCxcbiAgICAgICAgZ2V0VG9kYXlXZWF0aGVyLFxuICAgICAgICBnZXRGb3JlY2FzdCxcbiAgICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHBDb250cm9sbGVyOyIsImltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5pbXBvcnQgQXBwQ29udHJvbGxlciBmcm9tIFwiLi9tb2R1bGVzL2NvbnRyb2xsZXJzL0FwcENvbnRyb2xsZXJcIjtcblxuY29uc3QgYXBwQ29udHJvbGxlciA9IEFwcENvbnRyb2xsZXIoKTtcbmFwcENvbnRyb2xsZXIuaW5pdCgpO1xuLy8gYXBwQ29udHJvbGxlci5nZXRUb2RheVdlYXRoZXIoe2xvY2F0aW9uOiBcImhvIGNoaSBtaW5oXCJ9KTtcbi8vIGFwcENvbnRyb2xsZXIuZ2V0Rm9yZWNhc3Qoe2xvY2F0aW9uOiBcImhvIGNoaSBtaW5oXCJ9KTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsImxvY2FscyIsImNhcmQiLCJjbGFzc05hbWUiLCJkYXlEaXYiLCJ0ZXh0Q29udGVudCIsImRhdGVEaXYiLCJ0ZW1wRGl2IiwiaWNvbiIsIkltYWdlIiwidGltZURpdiIsImljb25MaW5rIiwidGl0bGUiLCJkZXRhaWxDYXJkIiwiaGVhZGVyIiwidGl0bGVEaXYiLCJjb250ZW50RGl2IiwiaW5pdCIsImxpbmsiLCJyZWwiLCJ0eXBlIiwiaHJlZiIsImxlZnRTZWN0aW9uIiwic2VhcmNoQmFyIiwibWFwSWNvbiIsImlucHV0Iiwic2VhcmNoSWNvbiIsInRvZGF5Qm9hcmQiLCJ0ZW1wQnV0dG9ucyIsImNCdXR0b24iLCJmQnV0dG9uIiwibWFpbkRpc3BsYXkiLCJjaXR5RGlzcGxheSIsInRlbXBEaXNwbGF5IiwiY29uZGl0aW9uRGlzcGxheSIsImRldGFpbERpc3BsYXkiLCJmZWVsc0xpa2VDYXJkIiwicHJlY2lwaXRhdGlvbkNhcmQiLCJ2aXNpYmlsaXR5Q2FyZCIsImh1bWlkaXR5Q2FyZCIsImJvZHkiLCJyaWdodFNlY3Rpb24iLCJob3VyRm9yZWNhc3RCb2FyZCIsImJvYXJkIiwiY2FyZHMiLCJjbGFzc0xpc3QiLCJhZGQiLCJkYXlGb3JlY2FzdEJvYXJkIiwic2NyZWVuQ29udHJvbGxlciIsImdldFRvZGF5V2VhdGhlciIsImFzeW5jIiwicmVzcG9uc2UiLCJmZXRjaCIsImpzb24iLCJjb25zb2xlIiwibG9nIiwiZ2V0Rm9yZWNhc3QiXSwic291cmNlUm9vdCI6IiJ9