(()=>{"use strict";var n={108:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/dayForecastBoard/dayForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const c=d},880:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/dayForecastCard/dayForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const c=d},783:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/modules/components/detailCard/detailCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:[".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const c=d},273:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/hourForecastBoard/hourForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const c=d},48:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card img {\n    width: 70px;\n    height: 70px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/hourForecastCard/hourForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card img {\n    width: 70px;\n    height: 70px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const c=d},11:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/searchBar/searchBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB",sourcesContent:[".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n"],sourceRoot:""}]);const c=d},741:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .main-display .image {\n    width: 100px;\n    height: 100px;\n    border: 0;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}","",{version:3,sources:["webpack://./src/modules/components/todayBoard/todayBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2CAA2C;IAC3C,SAAS;IACT,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:[".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .main-display .image {\n    width: 100px;\n    height: 100px;\n    border: 0;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}"],sourceRoot:""}]);const c=d},876:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".uv-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.uv-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n}\n\n.uv-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.uv-board .content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.uv-board .content .value {\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.uv-board .content .level {\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/modules/components/uvBoard/uvBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:[".uv-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.uv-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n}\n\n.uv-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.uv-board .content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.uv-board .content .value {\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.uv-board .content .level {\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const c=d},142:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,".wind-board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.wind-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    align-self: flex-start;\n}\n\n.wind-board .header .icon {\n    width: 20px;\n    height: 20px;\n} \n\n.wind-board .content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.wind-board .content .speed {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    row-gap: 5px;\n    column-gap: 10px;\n}\n\n.wind-board .content .speed .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .speed .unit {\n    color: #64748b;\n}\n\n.wind-board .content hr {\n    width: 80%;\n    border: 0.5px solid #64748b;\n}\n\n.wind-board .content .gust {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    row-gap: 5px;\n    column-gap: 10px;\n}\n\n.wind-board .content .gust .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .gust .unit {\n    color: #64748b;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/windBoard/windBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,2CAA2C;IAC3C,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,2CAA2C;IAC3C,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".wind-board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.wind-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    align-self: flex-start;\n}\n\n.wind-board .header .icon {\n    width: 20px;\n    height: 20px;\n} \n\n.wind-board .content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.wind-board .content .speed {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    row-gap: 5px;\n    column-gap: 10px;\n}\n\n.wind-board .content .speed .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .speed .unit {\n    color: #64748b;\n}\n\n.wind-board .content hr {\n    width: 80%;\n    border: 0.5px solid #64748b;\n}\n\n.wind-board .content .gust {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    row-gap: 5px;\n    column-gap: 10px;\n}\n\n.wind-board .content .gust .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .gust .unit {\n    color: #64748b;\n}\n\n"],sourceRoot:""}]);const c=d},426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),a=t.n(o),r=t(645),d=t.n(r)()(a());d.push([n.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.left-section .error-span {\n    height: 14px;\n    font-size: 14px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n/* END OF SCROLL BAR */\n\n.right-section .extra-boards {\n    display: flex;\n    gap: 20px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,6CAA6C;IAC7C,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;;AAEf,UAAU;AACV;IACI,WAAW;IACX,WAAW;AACf;;AAEA,UAAU;AACV;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA,WAAW;AACX;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA,oBAAoB;AACpB;IACI,iBAAiB;AACrB;;AAEA,sBAAsB;;AAEtB;IACI,aAAa;IACb,SAAS;AACb",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.left-section .error-span {\n    height: 14px;\n    font-size: 14px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n/* END OF SCROLL BAR */\n\n.right-section .extra-boards {\n    display: flex;\n    gap: 20px;\n}\n\n"],sourceRoot:""}]);const c=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(d[A]=!0)}for(var i=0;i<n.length;i++){var s=[].concat(n[i]);o&&d[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},d=[],c=0;c<n.length;c++){var A=n[c],i=o.base?A[0]+o.base:A[0],s=r[i]||0,l="".concat(i," ").concat(s);r[i]=s+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}d.push(l)}return d}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var d=0;d<r.length;d++){var c=t(r[d]);e[c].references--}for(var A=o(n,a),i=0;i<r.length;i++){var s=t(r[i]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),d=t.n(r),c=t(565),A=t.n(c),i=t(216),s=t.n(i),l=t(589),p=t.n(l),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=d().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=s(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=t.p+"f646ca502700fb71aa79.svg";var b=t(108),x={};x.styleTagTransform=p(),x.setAttributes=A(),x.insert=d().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=s(),e()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;const h=t.p+"9571d41eda088e19f37b.svg";var g=t(880),I={};I.styleTagTransform=p(),I.setAttributes=A(),I.insert=d().bind(null,"head"),I.domAPI=a(),I.insertStyleElement=s(),e()(g.Z,I),g.Z&&g.Z.locals&&g.Z.locals;const f=t.p+"6decf7bd9b10cd59dc3d.svg",y=()=>{const n=document.createElement("div");n.className="day-card";const e=document.createElement("div");e.className="day",e.textContent="Mon",n.appendChild(e);const t=document.createElement("div");t.className="date",t.textContent="16/09",n.appendChild(t);const o=document.createElement("div");o.className="temp",o.textContent="28°",n.appendChild(o);const a=new Image;return a.className="icon",a.src=f,n.appendChild(a),n};var B=t(273),v={};v.styleTagTransform=p(),v.setAttributes=A(),v.insert=d().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=s(),e()(B.Z,v),B.Z&&B.Z.locals&&B.Z.locals;const w=t.p+"59953f3df89bb896d08b.svg";var E=t(48),S={};S.styleTagTransform=p(),S.setAttributes=A(),S.insert=d().bind(null,"head"),S.domAPI=a(),S.insertStyleElement=s(),e()(E.Z,S),E.Z&&E.Z.locals&&E.Z.locals;const k=({hour:n,temp:e,imageURL:t})=>{const o=document.createElement("div");o.className="hour-card";const a=document.createElement("div");a.className="time",a.textContent=n,o.appendChild(a);const r=document.createElement("div");r.className="temp",r.textContent=e+"°",o.appendChild(r);const d=new Image;return o.appendChild(d),fetch("https://"+t).then((n=>n.blob())).then((n=>{const e=URL.createObjectURL(n);d.src=e})).catch((n=>{console.log("Cannot fetch image: "+n)})),o};var N=t(11),Z={};Z.styleTagTransform=p(),Z.setAttributes=A(),Z.insert=d().bind(null,"head"),Z.domAPI=a(),Z.insertStyleElement=s(),e()(N.Z,Z),N.Z&&N.Z.locals&&N.Z.locals;const Y=t.p+"9307c19cf2ce7ca1b033.svg",T=t.p+"a1bc70cf1fd9752b9645.svg";var z=t(741),R={};R.styleTagTransform=p(),R.setAttributes=A(),R.insert=d().bind(null,"head"),R.domAPI=a(),R.insertStyleElement=s(),e()(z.Z,R),z.Z&&z.Z.locals&&z.Z.locals;const L=t.p+"779e31fd4101817c3f41.svg",j=t.p+"0b7873d0bb72c7d55a3b.svg",W=t.p+"5f174509409297985c74.svg";var U=t(783),F={};F.styleTagTransform=p(),F.setAttributes=A(),F.insert=d().bind(null,"head"),F.domAPI=a(),F.insertStyleElement=s(),e()(U.Z,F),U.Z&&U.Z.locals&&U.Z.locals;const O=({iconLink:n,title:e,content:t})=>{const o=document.createElement("div");o.className="detail-card";const a=document.createElement("div");a.className="header";const r=new Image;r.className="icon",r.src=n,a.appendChild(r);const d=document.createElement("div");d.textContent=e,a.appendChild(d),o.appendChild(a);const c=document.createElement("div");return c.className="content",c.textContent=t,o.appendChild(c),o};var P=t(876),q={};q.styleTagTransform=p(),q.setAttributes=A(),q.insert=d().bind(null,"head"),q.domAPI=a(),q.insertStyleElement=s(),e()(P.Z,q),P.Z&&P.Z.locals&&P.Z.locals;var D=t(142),H={};H.styleTagTransform=p(),H.setAttributes=A(),H.insert=d().bind(null,"head"),H.domAPI=a(),H.insertStyleElement=s(),e()(D.Z,H),D.Z&&D.Z.locals&&D.Z.locals;const M=t.p+"a58f8fb5a92c447777f7.svg",X=()=>({init:()=>{},getData:async({location:n})=>{try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=a447ab4f8114437dab575353231310&q=${n}&days=14`);return await e.json()}catch{return console.log("Something went wrong"),null}}});(()=>{const n=X(),e=({data:n})=>{console.log(n),document.querySelector(".today-board .main-display .city").textContent=n.location.name,document.querySelector(".today-board .main-display .temp").textContent=`${n.current.temp_c}°`,document.querySelector(".today-board .main-display .condition").textContent=n.current.condition.text;const e=document.querySelector(".today-board .main-display .image");fetch("https://"+n.current.condition.icon.substring(2)).then((n=>n.blob())).then((n=>{const t=URL.createObjectURL(n);e.src=t})).catch((n=>{console.log("Cannot fetch image: "+n)})),document.querySelector(".today-board .detail-card:first-child .content").textContent=`${n.current.feelslike_c}°`,document.querySelector(".today-board .detail-card:nth-child(2) .content").textContent=`${n.current.precip_mm} mm`,document.querySelector(".today-board .detail-card:nth-child(3) .content").textContent=`${n.current.vis_km} km`,document.querySelector(".today-board .detail-card:nth-child(4) .content").textContent=`${n.current.humidity}%`,document.querySelector(".uv-board .content .value").textContent=n.current.uv;const t=document.querySelector(".uv-board .content .level");0<=n.current.uv&&n.current.uv<=2?t.textContent="Low":3<=n.current.uv&&n.current.uv<=5?t.textContent="Moderate":6<=n.current.uv&&n.current.uv<=7?t.textContent="High":8<=n.current.uv&&n.current.uv<=10?t.textContent="Very High":t.textContent="Extreme",document.querySelector(".wind-board .speed .value").textContent=n.current.wind_kph,document.querySelector(".wind-board .gust .value").textContent=n.current.gust_kph;const o=document.querySelector(".hour-board .cards");for(;o.lastChild;)o.removeChild(o.lastChild);const a=new Date,r=k({hour:"Now",temp:n.current.temp_c,imageURL:n.current.condition.icon});r.classList.add("hour-card-active"),o.appendChild(r);for(let e=a.getHours()+1;e<24;e++){const t=n.forecast.forecastday[0].hour[e.toString()],a=k({hour:t.time.split(" ")[1],temp:t.temp_c,imageURL:t.condition.icon});o.appendChild(a)}const d=24-o.childElementCount;console.log(d);for(let e=0;e<d;e++){const t=n.forecast.forecastday[1].hour[e.toString()],a=k({hour:t.time.split(" ")[1],temp:t.temp_c,imageURL:t.condition.icon});o.appendChild(a)}};return{init:async()=>{const t=document.createElement("link");t.rel="icon",t.type="image/x-icon",t.href=C,document.head.appendChild(t);const o=document.createElement("div");o.className="left-section";const a=(()=>{const n=document.createElement("div");n.className="search-bar";const e=new Image;e.src=Y,e.className="map-icon",n.appendChild(e);const t=document.createElement("input");t.type="text",n.appendChild(t);const o=new Image;return o.src=T,o.className="search-icon",n.appendChild(o),n})();o.appendChild(a);const r=document.createElement("span");r.className="error-span",o.appendChild(r);const d=(()=>{const n=document.createElement("div");n.className="today-board";const e=document.createElement("div");e.className="temp-buttons";const t=document.createElement("button");t.className="c-button button-active",t.textContent="°C",e.appendChild(t);const o=document.createElement("button");o.className="f-button",o.textContent="°F",e.appendChild(o),n.appendChild(e);const a=document.createElement("div");a.className="main-display";const r=document.createElement("div");r.className="city",a.appendChild(r);const d=document.createElement("div");d.className="temp",a.appendChild(d);const c=document.createElement("div");c.className="condition",a.appendChild(c);const A=document.createElement("img");A.className="image",a.appendChild(A),n.appendChild(a);const i=document.createElement("div");i.className="detail-display";const s=O({iconLink:L,title:"FEELS LIKE",content:""});i.appendChild(s);const l=O({iconLink:j,title:"PRECIPITATION",content:""});i.appendChild(l);const p=O({iconLink:W,title:"VISIBILITY",content:""});i.appendChild(p);const u=O({iconLink:f,title:"HUMIDITY",content:""});return i.appendChild(u),n.appendChild(i),n})();o.appendChild(d),document.body.appendChild(o);const c=document.createElement("div");c.className="right-section";const A=(()=>{const n=document.createElement("div");n.className="hour-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=w,e.appendChild(t);const o=document.createElement("div");o.textContent="HOURLY FORECAST",e.appendChild(o),n.appendChild(e);const a=document.createElement("div");return a.className="cards",n.appendChild(a),n})();c.appendChild(A);const i=(()=>{const n=document.createElement("div");n.className="day-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=h,e.appendChild(t);const o=document.createElement("div");o.textContent="14-DAY FORECAST",e.appendChild(o),n.appendChild(e);const a=document.createElement("div");a.className="cards";for(let n=0;n<14;n++){const e=y();0===n&&e.classList.add("day-card-active"),a.appendChild(e)}return n.appendChild(a),n})();c.appendChild(i);const s=document.createElement("div");s.className="extra-boards";const l=(()=>{const n=document.createElement("div");n.className="uv-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=L,e.appendChild(t);const o=document.createElement("div");o.textContent="UV INDEX",e.appendChild(o),n.appendChild(e);const a=document.createElement("div");a.className="content";const r=document.createElement("div");r.className="value",a.appendChild(r);const d=document.createElement("div");return d.className="level",a.appendChild(d),n.appendChild(a),n})();s.appendChild(l);const p=(()=>{const n=document.createElement("div");n.className="wind-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=M,e.appendChild(t);const o=document.createElement("div");o.textContent="WIND",e.appendChild(o),n.appendChild(e);const a=document.createElement("div");a.className="content";const r=document.createElement("div");r.className="speed";const d=document.createElement("div");d.className="value",r.appendChild(d);const c=document.createElement("div");c.className="unit",c.textContent="KPH",r.appendChild(c);const A=document.createElement("div");A.textContent="Wind",r.appendChild(A),a.appendChild(r);const i=document.createElement("hr");a.appendChild(i);const s=document.createElement("div");s.className="gust";const l=document.createElement("div");l.className="value",s.appendChild(l);const p=document.createElement("div");p.className="unit",p.textContent="KPH",s.appendChild(p);const u=document.createElement("div");return u.textContent="Gusts",s.appendChild(u),a.appendChild(s),n.appendChild(a),n})();s.appendChild(p),c.appendChild(s),document.body.appendChild(c),(async()=>{const t=document.querySelector(".search-bar input"),o=document.querySelector(".error-span");t.addEventListener("keyup",(async a=>{if(13===a.keyCode)if(o.textContent="",""===t.value.trim())o.textContent="Please enter a valid city's name.";else{const a=await n.getData({location:t.value.trim()});null===a||a.hasOwnProperty("error")?o.textContent="Cannot find location.":e({data:a})}}))})();const u=await n.getData({location:"Ho Chi Minh City"});null===u||u.hasOwnProperty("error")?r.textContent="Cannot find location.":e({data:u})}}})().init(),X().getData({location:"sydney"})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,