(()=>{"use strict";var n={108:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/dayForecastBoard/dayForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".day-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.day-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.day-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.day-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const d=A},880:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/dayForecastCard/dayForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".day-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.day-card .day {\n    font-size: 12px;\n}\n\n.day-card .date {\n    font-size: 12px;\n    color: #64748b;\n}\n\n.day-card .temp {\n    font-size: 30px;\n}\n\n.day-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const d=A},783:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/modules/components/detailCard/detailCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:[".detail-card {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #27272a;\n    padding: 10px;\n    height: 130px;\n    border-radius: 10px;\n}\n\n.detail-card .header {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #64748b;\n}\n\n.detail-card .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.detail-card .content {\n    font-size: 30px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const d=A},273:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}","",{version:3,sources:["webpack://./src/modules/components/hourForecastBoard/hourForecastBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,oBAAoB;IACpB,+BAA+B;AACnC;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;AACpB",sourcesContent:[".hour-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.hour-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    padding-bottom: 10px;\n    border-bottom: 0.5px solid grey;\n}\n\n.hour-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.hour-board .cards {\n    display: flex;\n    gap: 40px;\n    width: 100%;\n    overflow-x: auto;\n}"],sourceRoot:""}]);const d=A},48:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/hourForecastCard/hourForecastCard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".hour-card {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n}\n\n.hour-card .time {\n    font-size: 12px;\n}\n\n.hour-card .temp {\n    font-size: 30px;\n}\n\n.hour-card-active {\n    background-color: rgba(245, 245, 245, 0.1);\n}\n\n"],sourceRoot:""}]);const d=A},11:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/searchBar/searchBar.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,QAAQ;IACR,YAAY;IACZ,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB",sourcesContent:[".search-bar {\n    display: flex;\n    gap: 5px;\n    height: 30px;\n    background-color: #71717a;\n    border-radius: 10px;\n    padding: 5px 10px;\n}\n\n.search-bar .map-icon {\n    height: 100%;\n}\n\n.search-bar input {\n    flex-grow: 1;\n    background-color: transparent;\n    border: none;\n    color: white;\n    outline: none;\n}\n\n.search-bar .search-icon {\n    height: 100%;\n}\n\n"],sourceRoot:""}]);const d=A},741:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}","",{version:3,sources:["webpack://./src/modules/components/todayBoard/todayBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,6BAA6B;IAC7B,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2CAA2C;IAC3C,SAAS;IACT,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:[".today-board {\n    display: flex;\n    flex-direction: column;\n    gap: 80px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.today-board .temp-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.today-board .c-button, .today-board .f-button {\n    background-color: transparent;\n    color: white;\n    border: none;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n}\n\n.today-board .c-button:hover, .today-board .f-button:hover {\n    background-color: #71717a;\n    color: white;\n}\n\n.today-board .c-button.button-active, .today-board .f-button.button-active {\n    background-color: #71717a;\n}\n\n.today-board .main-display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 1;\n    gap: 10px;\n}\n\n.today-board .main-display .city {\n    font-size: 25px;\n}\n\n.today-board .main-display .temp {\n    font-size: 60px;\n}\n\n.today-board .main-display .condition {\n    font-size: 20px;\n    color: #d1d5db;\n}\n\n.today-board .detail-display {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: 20px;\n    flex-grow: 1;\n    justify-self: flex-end;\n}"],sourceRoot:""}]);const d=A},876:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".uv-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.uv-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n}\n\n.uv-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.uv-board .content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.uv-board .content .value {\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.uv-board .content .level {\n    font-size: 14px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/modules/components/uvBoard/uvBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:[".uv-board {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.uv-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n}\n\n.uv-board .header .icon {\n    width: 20px;\n    height: 20px;\n}\n\n.uv-board .content {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.uv-board .content .value {\n    font-size: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.uv-board .content .level {\n    font-size: 14px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const d=A},142:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,".wind-board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.wind-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    align-self: flex-start;\n}\n\n.wind-board .header .icon {\n    width: 20px;\n    height: 20px;\n} \n\n.wind-board .content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.wind-board .content .speed {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    gap: 5px;\n}\n\n.wind-board .content .speed .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .speed .unit {\n    color: #64748b;\n}\n\n.wind-board .content hr {\n    width: 80%;\n    border: 0.5px solid #64748b;\n}\n\n.wind-board .content .gust {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    gap: 5px;\n}\n\n.wind-board .content .gust .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .gust .unit {\n    color: #64748b;\n}\n\n","",{version:3,sources:["webpack://./src/modules/components/windBoard/windBoard.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,2CAA2C;IAC3C,QAAQ;AACZ;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,2CAA2C;IAC3C,QAAQ;AACZ;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".wind-board {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    background-color: #18181b;\n    padding: 20px;\n    border-radius: 10px;\n    flex-grow: 1;\n}\n\n.wind-board .header {\n    display: flex;\n    gap: 10px;\n    color: #64748b;\n    align-self: flex-start;\n}\n\n.wind-board .header .icon {\n    width: 20px;\n    height: 20px;\n} \n\n.wind-board .content {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.wind-board .content .speed {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    gap: 5px;\n}\n\n.wind-board .content .speed .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .speed .unit {\n    color: #64748b;\n}\n\n.wind-board .content hr {\n    width: 80%;\n    border: 0.5px solid #64748b;\n}\n\n.wind-board .content .gust {\n    display: grid;\n    grid-template-columns: max-content max-content;\n    grid-template-rows: max-content max-content;\n    gap: 5px;\n}\n\n.wind-board .content .gust .value {\n    grid-row: 1 / 3;\n    font-size: 30px;\n}\n\n.wind-board .content .gust .unit {\n    color: #64748b;\n}\n\n"],sourceRoot:""}]);const d=A},426:(n,e,t)=>{t.d(e,{Z:()=>d});var a=t(537),o=t.n(a),r=t(645),A=t.n(r)()(o());A.push([n.id,"* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n/* END OF SCROLL BAR */\n\n.right-section .extra-boards {\n    display: flex;\n    gap: 20px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,+DAA+D;IAC/D,8BAA8B,EAAE,gCAAgC;IAChE,2BAA2B,KAAK,yBAAyB;IACzD,sBAAsB,UAAU,gBAAgB;AACpD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,6CAA6C;IAC7C,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA,eAAe;;AAEf,UAAU;AACV;IACI,WAAW;IACX,WAAW;AACf;;AAEA,UAAU;AACV;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA,WAAW;AACX;IACI,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA,oBAAoB;AACpB;IACI,iBAAiB;AACrB;;AAEA,sBAAsB;;AAEtB;IACI,aAAa;IACb,SAAS;AACb",sourcesContent:["* {\n    /* Fix issue with extra space on the side when adding padding */\n    -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */\n    -moz-box-sizing: border-box;    /* Firefox, other Gecko */\n    box-sizing: border-box;         /* Opera/IE 8+ */\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: 1fr minmax(500px, 2fr);\n    background-color: #27272a;\n    color: white;\n    height: 100vh;\n    font-family: Georgia, serif;\n}\n\n.left-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n.right-section {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* SCROLL BAR */\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 5px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: grey;\n    border-radius: 5px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #cbd5e1;\n    border-radius: 5px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: white;\n}\n\n/* END OF SCROLL BAR */\n\n.right-section .extra-boards {\n    display: flex;\n    gap: 20px;\n}\n\n"],sourceRoot:""}]);const d=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(a)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(A[c]=!0)}for(var i=0;i<n.length;i++){var s=[].concat(n[i]);a&&A[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},A=[],d=0;d<n.length;d++){var c=n[d],i=a.base?c[0]+a.base:c[0],s=r[i]||0,l="".concat(i," ").concat(s);r[i]=s+1;var p=t(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=o(m,a);a.byIndex=d,e.splice(d,0,{identifier:l,updater:u,references:1})}A.push(l)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<r.length;A++){var d=t(r[A]);e[d].references--}for(var c=a(n,o),i=0;i<r.length;i++){var s=t(r[i]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!n;)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),o=t.n(a),r=t(569),A=t.n(r),d=t(565),c=t.n(d),i=t(216),s=t.n(i),l=t(589),p=t.n(l),m=t(426),u={};u.styleTagTransform=p(),u.setAttributes=c(),u.insert=A().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=s(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const C=t.p+"f646ca502700fb71aa79.svg";var b=t(108),x={};x.styleTagTransform=p(),x.setAttributes=c(),x.insert=A().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=s(),e()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;const h=t.p+"9571d41eda088e19f37b.svg";var g=t(880),I={};I.styleTagTransform=p(),I.setAttributes=c(),I.insert=A().bind(null,"head"),I.domAPI=o(),I.insertStyleElement=s(),e()(g.Z,I),g.Z&&g.Z.locals&&g.Z.locals;const f=t.p+"6decf7bd9b10cd59dc3d.svg",B=()=>{const n=document.createElement("div");n.className="day-card";const e=document.createElement("div");e.className="day",e.textContent="Mon",n.appendChild(e);const t=document.createElement("div");t.className="date",t.textContent="16/09",n.appendChild(t);const a=document.createElement("div");a.className="temp",a.textContent="28°",n.appendChild(a);const o=new Image;return o.className="icon",o.src=f,n.appendChild(o),n};var y=t(273),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=A().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=s(),e()(y.Z,v),y.Z&&y.Z.locals&&y.Z.locals;const w=t.p+"59953f3df89bb896d08b.svg";var E=t(48),k={};k.styleTagTransform=p(),k.setAttributes=c(),k.insert=A().bind(null,"head"),k.domAPI=o(),k.insertStyleElement=s(),e()(E.Z,k),E.Z&&E.Z.locals&&E.Z.locals;const S=()=>{const n=document.createElement("div");n.className="hour-card";const e=document.createElement("div");e.className="time",e.textContent="15:00",n.appendChild(e);const t=document.createElement("div");t.className="temp",t.textContent="28°",n.appendChild(t);const a=new Image;return a.src=f,n.appendChild(a),n};var Z=t(11),N={};N.styleTagTransform=p(),N.setAttributes=c(),N.insert=A().bind(null,"head"),N.domAPI=o(),N.insertStyleElement=s(),e()(Z.Z,N),Z.Z&&Z.Z.locals&&Z.Z.locals;const T=t.p+"9307c19cf2ce7ca1b033.svg",Y=t.p+"a1bc70cf1fd9752b9645.svg";var z=t(741),j={};j.styleTagTransform=p(),j.setAttributes=c(),j.insert=A().bind(null,"head"),j.domAPI=o(),j.insertStyleElement=s(),e()(z.Z,j),z.Z&&z.Z.locals&&z.Z.locals;const R=t.p+"779e31fd4101817c3f41.svg",W=t.p+"0b7873d0bb72c7d55a3b.svg",L=t.p+"5f174509409297985c74.svg";var F=t(783),O={};O.styleTagTransform=p(),O.setAttributes=c(),O.insert=A().bind(null,"head"),O.domAPI=o(),O.insertStyleElement=s(),e()(F.Z,O),F.Z&&F.Z.locals&&F.Z.locals;const P=({iconLink:n,title:e,content:t})=>{const a=document.createElement("div");a.className="detail-card";const o=document.createElement("div");o.className="header";const r=new Image;r.className="icon",r.src=n,o.appendChild(r);const A=document.createElement("div");A.textContent=e,o.appendChild(A),a.appendChild(o);const d=document.createElement("div");return d.className="content",d.textContent=t,a.appendChild(d),a};var U=t(876),M={};M.styleTagTransform=p(),M.setAttributes=c(),M.insert=A().bind(null,"head"),M.domAPI=o(),M.insertStyleElement=s(),e()(U.Z,M),U.Z&&U.Z.locals&&U.Z.locals;var D=t(142),Q={};Q.styleTagTransform=p(),Q.setAttributes=c(),Q.insert=A().bind(null,"head"),Q.domAPI=o(),Q.insertStyleElement=s(),e()(D.Z,Q),D.Z&&D.Z.locals&&D.Z.locals;const X=t.p+"a58f8fb5a92c447777f7.svg",H=()=>({init:()=>{const n=document.createElement("link");n.rel="icon",n.type="image/x-icon",n.href=C,document.head.appendChild(n);const e=document.createElement("div");e.className="left-section";const t=(()=>{const n=document.createElement("div");n.className="search-bar";const e=new Image;e.src=T,e.className="map-icon",n.appendChild(e);const t=document.createElement("input");t.type="text",n.appendChild(t);const a=new Image;return a.src=Y,a.className="search-icon",n.appendChild(a),n})();e.appendChild(t);const a=(()=>{const n=document.createElement("div");n.className="today-board";const e=document.createElement("div");e.className="temp-buttons";const t=document.createElement("button");t.className="c-button button-active",t.textContent="°C",e.appendChild(t);const a=document.createElement("button");a.className="f-button",a.textContent="°F",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="main-display";const r=document.createElement("div");r.className="city",r.textContent="Ho Chi Minh",o.appendChild(r);const A=document.createElement("div");A.className="temp",A.textContent="28°",o.appendChild(A);const d=document.createElement("div");d.className="condition",d.textContent="Rainy Day",o.appendChild(d),n.appendChild(o);const c=document.createElement("div");c.className="detail-display";const i=P({iconLink:R,title:"FEELS LIKE",content:"30°"});c.appendChild(i);const s=P({iconLink:W,title:"PRECIPITATION",content:"20 mm"});c.appendChild(s);const l=P({iconLink:L,title:"VISIBILITY",content:"5 km"});c.appendChild(l);const p=P({iconLink:f,title:"HUMIDITY",content:"82%"});return c.appendChild(p),n.appendChild(c),n})();e.appendChild(a),document.body.appendChild(e);const o=document.createElement("div");o.className="right-section";const r=(()=>{const n=document.createElement("div");n.className="hour-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=w,e.appendChild(t);const a=document.createElement("div");a.textContent="HOURLY FORECAST",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="cards";for(let n=0;n<15;n++){const e=S();0===n&&e.classList.add("hour-card-active"),o.appendChild(e)}return n.appendChild(o),n})();o.appendChild(r);const A=(()=>{const n=document.createElement("div");n.className="day-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=h,e.appendChild(t);const a=document.createElement("div");a.textContent="14-DAY FORECAST",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="cards";for(let n=0;n<14;n++){const e=B();0===n&&e.classList.add("day-card-active"),o.appendChild(e)}return n.appendChild(o),n})();o.appendChild(A);const d=document.createElement("div");d.className="extra-boards";const c=(()=>{const n=document.createElement("div");n.className="uv-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=R,e.appendChild(t);const a=document.createElement("div");a.textContent="UV INDEX",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="content";const r=document.createElement("div");r.className="value",r.textContent="3",o.appendChild(r);const A=document.createElement("div");return A.className="level",A.textContent="Moderate",o.appendChild(A),n.appendChild(o),n})();d.appendChild(c);const i=(()=>{const n=document.createElement("div");n.className="wind-board";const e=document.createElement("div");e.className="header";const t=new Image;t.className="icon",t.src=X,e.appendChild(t);const a=document.createElement("div");a.textContent="WIND",e.appendChild(a),n.appendChild(e);const o=document.createElement("div");o.className="content";const r=document.createElement("div");r.className="speed";const A=document.createElement("div");A.className="value",A.textContent="3",r.appendChild(A);const d=document.createElement("div");d.className="unit",d.textContent="KMH",r.appendChild(d);const c=document.createElement("div");c.textContent="Wind",r.appendChild(c),o.appendChild(r);const i=document.createElement("hr");o.appendChild(i);const s=document.createElement("div");s.className="gust";const l=document.createElement("div");l.className="value",l.textContent="9",s.appendChild(l);const p=document.createElement("div");p.className="unit",p.textContent="KPH",s.appendChild(p);const m=document.createElement("div");return m.textContent="Gusts",s.appendChild(m),o.appendChild(s),n.appendChild(o),n})();d.appendChild(i),o.appendChild(d),document.body.appendChild(o)}});(()=>{const n=H();return{init:()=>{n.init()},getTodayWeather:async({location:n})=>{try{const e=await fetch(`https://api.weatherapi.com/v1/current.json?key=a447ab4f8114437dab575353231310&q=${n}`),t=await e.json();console.log(t)}catch{console.log("Something went wrong")}},getForecast:async({location:n})=>{try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=a447ab4f8114437dab575353231310&q=${n}&days=7`),t=await e.json();console.log(t)}catch{console.log("Something went wrong")}}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,